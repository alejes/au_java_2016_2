group 'PerformanceArchitecture'
version '1.0-SNAPSHOT'

apply plugin: 'java'

buildscript {
    dependencies {
        classpath group: 'de.dynamicfiles.projects.gradle.plugins', name: 'javafx-gradle-plugin', version: '8.7.0'
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.0'
    }
    repositories {
        mavenLocal()
        mavenCentral()
    }
}

sourceCompatibility = 1.8

apply plugin: 'javafx-gradle-plugin'
apply plugin: 'com.google.protobuf'
apply plugin: 'idea'

repositories {
    mavenLocal()
    mavenCentral()
}


repositories {
    mavenLocal()
    mavenCentral()
}

jfx {
    mainClass = "ui.MainClient"
}

protobuf {
    generatedFilesBaseDir = "$projectDir/src/"
}

dependencies {
    // https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java
    compile group: 'com.google.protobuf', name: 'protobuf-java', version: '3.1.0'
    compile group: 'org.controlsfx', name: 'controlsfx', version: '8.40.12'

    compileOnly "org.projectlombok:lombok:1.16.10"

    testCompile group: 'junit', name: 'junit', version: '4.11'
}




protobuf {
    // Configure the protoc executable
    generatedFilesBaseDir = 'generated-sources'
    protoc {
        artifact = 'com.google.protobuf:protoc:3.0.0'
        generatedFilesBaseDir = generatedFilesBaseDir
    }
    generateProtoTasks {
        all()*.each {task ->
            task.generateDescriptorSet = true
        }
    }
}

clean {
    delete protobuf.generatedFilesBaseDir
}

idea {
    module {
        sourceDirs += file("${protobuf.generatedFilesBaseDir}/main/java");
        // If you have additional sourceSets and/or codegen plugins, add all of them
        sourceDirs += file("${protobuf.generatedFilesBaseDir}/main/grpc");
    }
}